<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>postgresql on GrooveStomp</title>
    <link>http://127.0.0.1:1234/tags/postgresql/</link>
    <description>Recent content in postgresql on GrooveStomp</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 12 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://127.0.0.1:1234/tags/postgresql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PostgreSQL Password Encryption</title>
      <link>http://127.0.0.1:1234/2018/12/12/chkpass/</link>
      <pubDate>Wed, 12 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>http://127.0.0.1:1234/2018/12/12/chkpass/</guid>
      <description>I&amp;rsquo;m working on a side project to gain more exposure to different kinds of projects in Go. This one is a pretty typical web application involving multiple authenticated users. For data storage I&amp;rsquo;m using PostgreSQL for its UUID type and cryptographic extensions. The cryptographic extensions are interesting, because of things like chkpass1.
My project right now is using chkpass for storing user passwords. Almost immediately after hooking this up I started wondering how chkpass actually works.</description>
    </item>
    
  </channel>
</rss>